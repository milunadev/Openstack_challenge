---
- name: Ensure APT cache is updated
  apt:
    update_cache: yes
  become: yes

- name: Ensure psycopg2 is installed
  apt:
    name: python3-psycopg2
    state: present
  become: yes

- name: Download Puppet release package
  get_url:
    url: https://apt.puppet.com/puppet7-release-jammy.deb
    dest: /tmp/puppet7-release-jammy.deb
    mode: '0644'

- name: Install Puppet release package
  command: dpkg -i /tmp/puppet7-release-jammy.deb
  become: yes

- name: Update APT cache
  apt:
    update_cache: yes
  become: yes

- name: Install PuppetDB and PostgreSQL
  apt:
    name:
      - puppetdb
      - puppetdb-termini
      - postgresql
    state: present
  become: yes

- name: Ensure PostgreSQL service is enabled and started
  systemd:
    name: postgresql
    enabled: yes
    state: started
  become: yes

- name: Get PostgreSQL version
  command: psql -V
  register: postgresql_version_output
  become: yes

- name: Set PostgreSQL version fact
  set_fact:
    postgresql_version: "{{ postgresql_version_output.stdout.split(' ')[2].split('.')[0] }}"

- name: Set the pg_hba.conf path
  set_fact:
    pg_hba_path: "/etc/postgresql/{{ postgresql_version }}/main/pg_hba.conf"

- name: Allow trust authentication for PostgreSQL
  lineinfile:
    path: "{{ pg_hba_path }}"
    regexp: '^host    all             all             127.0.0.1/32            .*$'
    line: 'host    all             all             127.0.0.1/32            trust'
    state: present
  become: yes

- name: Allow trust authentication for local connections
  lineinfile:
    path: "{{ pg_hba_path }}"
    regexp: '^local   all             all                                     .*$'
    line: 'local   all             all                                     trust'
    state: present
  become: yes

- name: Allow trust authentication for postgres user
  lineinfile:
    path: "{{ pg_hba_path }}"
    regexp: '^local   all             postgres                                .*$'
    line: 'local   all             postgres                                trust'
    state: present
  become: yes

- name: Reload PostgreSQL to apply trust changes
  systemd:
    name: postgresql
    state: reloaded
  become: yes

- name: Wait for PostgreSQL to reload
  wait_for:
    path: /var/run/postgresql/.s.PGSQL.5432
    state: present
    timeout: 15

- name: Set password for postgres user
  postgresql_user:
    name: postgres
    password: 'postgrespassword'
    state: present
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Revert authentication method to md5 for PostgreSQL
  lineinfile:
    path: "{{ pg_hba_path }}"
    regexp: '^host    all             all             127.0.0.1/32            .*$'
    line: 'host    all             all             127.0.0.1/32            md5'
    state: present
  become: yes

- name: Revert authentication method to md5 for local connections
  lineinfile:
    path: "{{ pg_hba_path }}"
    regexp: '^local   all             all                                     .*$'
    line: 'local   all             all                                     md5'
    state: present
  become: yes

- name: Revert authentication method to md5 for postgres user
  lineinfile:
    path: "{{ pg_hba_path }}"
    regexp: '^local   all             postgres                                .*$'
    line: 'local   all             postgres                                md5'
    state: present
  become: yes

- name: Reload PostgreSQL to apply md5 changes
  systemd:
    name: postgresql
    state: reloaded
  become: yes

- name: Wait for PostgreSQL to reload
  wait_for:
    path: /var/run/postgresql/.s.PGSQL.5432
    state: present
    timeout: 15

- name: Configure PostgreSQL for PuppetDB
  postgresql_db:
    name: puppetdb
    state: present
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Create PuppetDB user for PostgreSQL without privileges
  postgresql_user:
    name: puppetdb
    password: 'puppetdbpassword'
    state: present
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Grant all privileges on puppetdb to puppetdb user
  postgresql_privs:
    db: puppetdb
    privs: ALL
    objs: ALL_IN_SCHEMA
    type: table
    roles: puppetdb
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Configure PuppetDB to use PostgreSQL
  template:
    src: puppetdb_database.ini.j2
    dest: /etc/puppetlabs/puppetdb/conf.d/database.ini
  become: yes

- name: Ensure PuppetDB service is enabled and started
  systemd:
    name: puppetdb
    enabled: yes
    state: started
  become: yes

- name: Configure PuppetDB terminus on Puppet Master
  template:
    src: puppetdb_routes.yaml.j2
    dest: /etc/puppetlabs/puppet/routes.yaml
  become: yes

- name: Check PuppetDB status
  command: systemctl status puppetdb
  register: puppetdb_status
  ignore_errors: yes
  become: yes

- name: Debug PuppetDB status
  debug:
    var: puppetdb_status
